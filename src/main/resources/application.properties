# MongoDB 配置
# MongoDB 配置
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=bookstore
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin
spring.data.mongodb.authentication-database=admin
#mysql
spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=QEer!@940916
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#redis
# application.properties
# Redis 配置
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=root
spring.data.redis.database=0
spring.data.redis.url=redis://localhost:6379/0
spring.data.redis.jedis.pool.max-active=10
spring.data.redis.jedis.pool.max-idle=5
spring.data.redis.jedis.pool.min-idle=1
# RabbitMQ配置
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=StrongPassword123!
spring.rabbitmq.template.exchange=bookstore.exchange
spring.rabbitmq.listener.type=direct
spring.rabbitmq.listener.direct.acknowledge-mode=auto
# JPA 配置
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Thymeleaf 配置
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
snowflake.node-id=0
zookeeper.connect-string=localhost:2181
zookeeper.session-timeout=5000
zookeeper.connection-timeout=3000
# 服务器端口
server.port=8092
netty.server.port=8093

# ======================
# 基础连接配置
# ======================
spring.kafka.bootstrap-servers=localhost:9091,localhost:9094,localhost:9093
#spring.kafka.bootstrap-servers=30.133.80.226:9092,30.133.80.226:9093
# ======================
# 生产者配置
# ======================
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# 生产环境推荐配置
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.batch-size=100
spring.kafka.producer.linger-ms=20
spring.kafka.producer.compression-type=snappy

# ======================
# 消费者配置
# ======================
spring.kafka.consumer.group-id=bookstore-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# 生产环境推荐配置
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.fetch-max-wait-ms=500

# ======================
# 监听器容器配置
# ======================
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
spring.kafka.listener.concurrency=3
spring.kafka.listener.poll-timeout=3000

# ======================
# rocketmq配置
# ======================
rocketmq.name-server=36.133.80.226:9876
rocketmq.producer.group=bookstore_producer
rocketmq.producer.send-message-timeout=3000
rocketmq.producer.retry-times-when-send-failed=2
rocketmq.consumer.group=bookstore_consumer
rocketmq.producer.vip-channel-enabled=false


# ======================
# elk配置
# ======================
ylog:
enable-elk: true
logstash-host: "127.0.0.1:5000"
app-name: bookstore